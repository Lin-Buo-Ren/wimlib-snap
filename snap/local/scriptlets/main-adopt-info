#!/usr/bin/env bash
# Extract and set the snap's version from the main part
# 林博仁(Buo-ren, Lin) <Buo.Ren.Lin@gmail.com> © 2019

set \
    -o errexit \
    -o errtrace \
    -o nounset \
    -o pipefail

init(){
    local \
        flag_dry_run=false \
        upstream_version \
		ntfs_3g_version \
        packaging_revision \
        some_place_under_the_project_repo \
        snap_version_string

    for commandline_argument in "${@}"; do
        case "${commandline_argument}" in
            # Enable execution tracing
            --debug)
                set -o xtrace
            ;;
            # Don't run snapcraftctl for testing purpose
            --dry-run)
                flag_dry_run=true
            ;;
            --usage)
                print_usage
                exit 0
            ;;
            *)
                printf -- \
                    'main-adopt-info: Error: Invalid command-line argument.\n' \
                    >&2
                print_usage
                exit 1
            ;;
        esac
    done

    if ! git describe &>/dev/null; then
        upstream_version=unknown
    else
        upstream_version="$(
            git \
                describe \
				--abbrev=3 \
                --always \
                --dirty=-d \
                --tags \
            | sed s/^v//
        )"
    fi

    ntfs_3g_version="$(
        git \
            -C ../../ntfs-3g/src \
            describe \
            --abbrev=3 \
            --always \
            --dirty=-d
    )"

    # WORKAROUND:
    #   Allow fetching project revision in multipass build
    #   environment, which uses out-of-tree build and packaging
    #   source tree repo location can't be determined via environment
    #   Unable to determine project version info in multipass build environment - snapcraft - snapcraft.io
    #   https://forum.snapcraft.io/t/unable-to-determine-project-version-info-in-multipass-build-environment/10416
    if test -d /root/project; then
        some_place_under_the_project_repo=/root/project
    else
        some_place_under_the_project_repo=..
    fi

    packaging_revision="$(
        git \
            -C "${some_place_under_the_project_repo}" \
            describe \
            --abbrev=3 \
            --always \
            --match nothing \
            --dirty=-d
    )"

    snap_version_string="${upstream_version}+n${ntfs_3g_version}+s${packaging_revision}"

    printf -- \
        'main-adopt-info: Setting snap version to "%s".\n' \
        "${snap_version_string}"
    if [ "${flag_dry_run}" = false ]; then
        snapcraftctl set-version \
            "${snap_version_string}"
    fi

    exit 0
}

print_usage(){
    printf -- 'Usage: main-adopt-info [options] _snap_name_\n'
    printf -- 'options: [--debug|--dry-run|--help]\n'
}

init "${@}"
